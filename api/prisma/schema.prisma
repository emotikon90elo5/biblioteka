generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Accounts {
  id          Int     @id @default(autoincrement())
  login       String  @db.Text
  pass        String  @db.Text
  accountType Int
  schoolsId   Int
  school      Schools @relation(fields: [schoolsId], references: [id])

  @@index([schoolsId], map: "Accounts_schoolsId_fkey")
}

model Bookcases {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(512)
  schoolsId Int
  school    Schools   @relation(fields: [schoolsId], references: [id])
  shelves   Shelves[]

  @@index([schoolsId], map: "Bookcases_schoolsId_fkey")
}

model Books {
  id              Int     @id @default(autoincrement())
  title           String  @db.VarChar(2048)
  author          String  @db.VarChar(512)
  publishingHouse String  @db.VarChar(512)
  ageCategory     Int
  shelvesId       Int
  localid         Int
  typeid          Int
  shelf           Shelves @relation(fields: [shelvesId], references: [id])
  type            Type    @relation(fields: [typeid], references: [id])
  rents           Rents[]

  @@index([shelvesId], map: "Books_shelvesId_fkey")
  @@index([typeid], map: "Books_typeid_fkey")
}

model Class {
  id        Int      @id @default(autoincrement())
  name      String   @db.Text
  schoolsId Int
  school    Schools  @relation(fields: [schoolsId], references: [id])
  pupils    Pupils[]

  @@index([schoolsId], map: "Class_schoolsId_fkey")
}

model Pupils {
  id        Int     @id @default(autoincrement())
  firstName String  @db.Text
  lastName  String  @db.Text
  classId   Int
  class     Class   @relation(fields: [classId], references: [id])
  rents     Rents[]

  @@index([classId], map: "Pupils_classId_fkey")
}

model Rents {
  id         Int       @id @default(autoincrement())
  rented     Boolean   @default(true)
  rentTime   DateTime  @default(now()) @db.Timestamp(0)
  returnTime DateTime? @db.Timestamp(0)
  booksId    Int
  pupilsId   Int
  book       Books     @relation(fields: [booksId], references: [id])
  pupils     Pupils    @relation(fields: [pupilsId], references: [id])

  @@index([booksId], map: "Rents_booksId_fkey")
  @@index([pupilsId], map: "Rents_pupilsId_fkey")
}

model Schools {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(512)
  location  String      @db.VarChar(2048)
  accounts  Accounts[]
  bookcases Bookcases[]
  class     Class[]
}

model Shelves {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(512)
  bookcasesId Int
  books       Books[]
  bookcase    Bookcases @relation(fields: [bookcasesId], references: [id])

  @@index([bookcasesId], map: "Shelves_bookcasesId_fkey")
}

model Type {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(512)
  books Books[]
}
